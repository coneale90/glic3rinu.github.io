{"name":"Lessons","tagline":"Pages","body":"# Lessons learned from CommunityLab\r\n\r\n1. Change your mindset, think big\r\n\"You don't have a bunch of slivers, you have a distributed system\"\r\n    * Create large slices to compensate for offline nodes and other failures\r\n    * Automate **everything**, you don't want to manually login into any sliver\r\n\r\n\r\n2. Make your experiments idempotent\r\n    Nodes come and go, you can not assume all your slivers being on the same state.\r\n    Design experiments in such a way that can run on both, fresh and already deployed nodes.\r\n\r\n\r\n3. Use concurrency for experiment deployment and for collecting the results\r\n    You **really** don't want to sequentially wait for half of your slivers timing out the SSH connection.\r\n    Use scripting languages like Bash. They usually integrate process management into the language itself. Just imagine how the following will look like if written in a language like Java and its threading library:\r\n    ```bash\r\n    cat sliver-mgmt-ip.list | while read IP; do\r\n        { \r\n          scp -o stricthostkeychecking=no experiment.sh root@[$IP]: &&\r\n          ssh root@$IP \"nohup bash experiment.sh\" ;\r\n        } &\r\n    done\r\n    ```\r\n\r\n4. CONFINE REST API doesn't love you too much\r\n    It's a node-oriented API, not researcher-oriented. Some **essential** information for your experiments may be cumbersome to obtain.\r\n    This snippet can be handy if you want to get all the mgmt IPs of your slivers and be able to start your experiment.\r\n    ```python\r\n    SLICE_ID = 249\r\n    \r\n    # API calls\r\n    # Requires \"pip install confine-orm\"\r\n    from orm.api import Api\r\n    controller = Api('https://controller.community-lab.net/api/')\r\n    slivers = controller.slivers.retrieve()\r\n    slivers.retrieve_related('node', 'slice')\r\n    \r\n    # Calculate sliver MGMT IP according to CONFINE addressing specs\r\n    # https://wiki.confine-project.eu/arch:addressing\r\n    MGMT_IPV6_PREFIX = controller.testbed_params.mgmt_ipv6_prefix\r\n    int_to_hex_str = lambda i,l: ('%.' + str(l) + 'x') % i\r\n    split_by_len = lambda s,l: [s[i:i+l] for i in range(0, len(s), l)]\r\n    for sliver in slivers.filter(slice__id=SLICE_ID):\r\n        node_id = sliver.node.id\r\n        slice_id = sliver.slice.id\r\n        for iface in sliver.interfaces:\r\n            if iface.type == 'management':\r\n                nr = '10' + int_to_hex_str(iface.nr, 2)\r\n                node_id = int_to_hex_str(node_id, 4)\r\n                slice_id = int_to_hex_str(slice_id, 12)\r\n                ipv6_words = MGMT_IPV6_PREFIX.split(':')[:3]\r\n                ipv6_words.extend([node_id, nr])\r\n                ipv6_words.extend(split_by_len(slice_id, 4))\r\n                print ':'.join(ipv6_words)\r\n                break\r\n    ```\r\n\r\n5. Pre-compile things on your own i686 virtual machine\r\n    At the time of writting this, common sliver free-space is arround ~700MB, which may be not enough for installing required dev libraries and compiling your average C++ application.\r\n    Moreover, doing so in an overcrowded Intel Atom machine will take like... I don't know, 10x more than in your high-end desktop?\r\n\r\n\r\n6. Be prepared for network issues\r\n    Not all nodes have Internet connectivity, \"apt-get install\" will not always work\r\n    Network splits are common around CN. You may end-up having multiple isolated experiments rather than a single one.\r\n\r\n\r\n7. Common development tools and network utils are missing :(\r\n    Add this to your \"experiment.sh\" and hope for Internet connectivity being available.\r\n    ```bash\r\n    apt-get update && \\\r\n    apt-get install -y inetutils-ping git traceroute tcpdump nano strace screen\r\n    ```\r\n    You also can create your own sliver templates, but you'll have to learn a few things that you don't want to.\r\n\r\n\r\n8. Did you forgot to set the slice state to start?\r\nMe too :)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}